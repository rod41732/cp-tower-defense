package constants;

import java.util.ArrayList;
import java.util.HashMap;

import javafx.scene.image.Image;
import model.Map;
import util.cpp;

public class Maps {
	private static ArrayList<Map> maps = new ArrayList<>();
	
	public static void loadMap() {
		int[][] m1 ={
				{0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0},
				{0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0},
				{0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,0,0,0,0},
				{0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0},
				{0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0},
				{0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3},
				{2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3},
				{0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3},
				{0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3},
				{0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3},
				{0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3},
				{0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3},
				{0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3}
				};
		HashMap<Integer, Image> tm1 = new HashMap<>();
		tm1.put(0,  null);
		maps.add(new Map(m1, tm1, new cpp.pii(0, 6), new cpp.pii(16, 2), Images.mapPreviews[0], Images.mapBgs[0]));
		
		
		
		int[][] m2 = {
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0},
				{0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0},
				{2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,0,0},
				{0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0},
				{0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
		};
		HashMap<Integer, Image> tm2 = new HashMap<>();
		tm2.put(0,  null);
		maps.add(new Map(m2, tm2, new cpp.pii(0, 6), new cpp.pii(18, 6), Images.mapPreviews[1], Images.mapBgs[1]));
	
		HashMap<Integer, Image> tm3 = new HashMap<>();
		int[][] m3 = {
				{0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3},
				{0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3},
				{0,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3},
				{0,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3},
				{0,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,0,0},
				{0,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,0,0},
				{2,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,3,3,3,2,2},
				{0,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,0,0},
				{0,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,0,0},
				{0,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3},
				{0,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3},
				{0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3},
				{0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3}
				};
		tm3.put(0,  null);
		maps.add(new Map(m3, tm3, new cpp.pii(0, 6), new cpp.pii(19, 6), Images.mapPreviews[2], Images.mapBgs[2]));
	
		HashMap<Integer, Image> tm4 = new HashMap<>();
		int[][] m4 = {
				{0,0,0,1,1,1,1,1,1,3,3,3,3,3,3,3,3,0,0,0,0},
				{0,0,0,2,2,2,2,2,1,3,1,1,1,1,1,1,1,0,0,0,0},
				{0,0,0,2,1,1,1,2,1,3,1,2,2,2,2,2,2,2,2,0,0},
				{3,3,1,2,1,3,1,2,1,3,1,2,1,1,1,1,1,0,0,0,0},
				{3,3,1,2,1,3,1,2,1,3,1,2,0,0,0,0,0,0,0,0,0},
				{3,3,1,2,1,3,1,2,1,3,1,2,0,0,0,0,0,3,3,3,3},
				{3,3,1,2,1,3,1,2,1,3,1,2,0,0,0,0,0,3,3,3,3},
				{3,3,1,2,1,3,1,2,1,3,1,2,1,1,1,1,1,1,1,1,3},
				{3,3,1,2,1,3,1,2,1,3,1,2,2,2,2,2,2,2,2,1,3},
				{3,3,1,2,1,3,1,2,1,3,1,1,1,1,1,1,1,1,2,1,3},
				{1,1,1,2,0,0,0,2,1,1,1,1,1,1,1,1,1,1,2,1,3},
				{2,2,2,2,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,0,0},
				{1,1,1,1,3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,0,0}
			};
		tm4.put(0,  null);
		maps.add(new Map(m4, tm4, new cpp.pii(0, 11), new cpp.pii(18, 2), Images.mapPreviews[3], Images.mapBgs[3]));
		
	
	}
	
	public static Map getMap(int i) {
		return maps.get(i);
	}
	
	public static int numOfAvaiableMaps() {
		return maps.size();
	}
}
